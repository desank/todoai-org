name: Azure Developer CLI CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment to deploy to.'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - staging

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Set up Azure CLI
        uses: azure/cli@v2
        with:
          inlineScript: |
            az --version

      - name: Set up azd
        uses: Azure/setup-azd@v2

      - name: Log in to Azure (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Authenticate with azd (OIDC)
        run: |
          azd auth login --client-id ${{ secrets.AZURE_CLIENT_ID }} --tenant-id ${{ secrets.AZURE_TENANT_ID }} --federated-credential-provider github

      - name: Create or Update azd environment
        run: |
          azd env new ${{ github.event.inputs.environment || 'dev' }} --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --location ${{ secrets.AZURE_LOCATION }} --no-prompt
          azd env set AZURE_RESOURCE_GROUP ${{ vars.AZURE_RESOURCE_GROUP }}

      - name: Provision Infrastructure
        run: |
          azd provision --environment ${{ github.event.inputs.environment || 'dev' }} --no-prompt

      - name: Deploy API
        run: |
          azd deploy api --environment ${{ github.event.inputs.environment || 'dev' }} --no-prompt

      - name: Build Flutter Web App
        working-directory: src/flutter_app
        run: flutter build web --release

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set Storage Account Name
        run: |
          echo "FRONTEND_STORAGE_ACCOUNT_NAME=$(azd env get-value FRONTEND_STORAGE_ACCOUNT_NAME)" >> $GITHUB_ENV

      - name: Ensure Static Website Hosting is Enabled
        run: |
          az storage blob service-properties update --account-name "$FRONTEND_STORAGE_ACCOUNT_NAME" --static-website --index-document index.html --404-document index.html --auth-mode login

      - name: Upload to Blob Storage
        run: |
          az storage blob upload-batch --account-name "$FRONTEND_STORAGE_ACCOUNT_NAME" --source ./src/flutter_app/build/web --destination \$web --overwrite --auth-mode login